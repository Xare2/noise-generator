// interface int_value
// {
// 	attribute long value;

// 	void int_value(long v);
// };

interface noise_generator {
	void proba_array([Ref] long[] array, long size);

	attribute long[] image_data;

    void noise_generator(long resolution, long seed, boolean color);
	void set_color(boolean color);
	void calculate_image_data();
	void populate_image_data(long[] image);
	void set_seed(long seed);

	float eval(float x, float y);
};

interface lattice_noise {
    void lattice_noise(long noise_grid_resolution, long seed, float frequency, boolean color);

	void set_frequency(float frequency);
	void set_resolution(long resolution);

	void set_seed(long seed) ;
};
lattice_noise implements noise_generator;

interface perlin_noise {
    void perlin_noise(float frequency, long noise_grid_resolution, long seed, boolean color);
	void set_seed(long seed);
	void set_resolution(long resolution);
	float eval(float x, float y);
};
perlin_noise implements lattice_noise;

interface value_noise 
{
	void value_noise(float frequency, long noise_grid_resolution, long seed, boolean color);
	float eval(float x, float y);
};
value_noise implements lattice_noise;

interface white_noise
{
	float eval(float x, float y);
};
white_noise implements lattice_noise;

interface voronoi_noise 
{
    void voronoi_noise(long image_resolution, long cell_amount, long seed, boolean color);

	void set_cell_amount(long cell_amount);
	void set_resolution(long resolution);
	
	void set_seed(long seed);
	float eval(float x, float y);
};
voronoi_noise implements noise_generator;
