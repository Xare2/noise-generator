interface vector2 {
    attribute float x;
    attribute float y;
};

interface noise_generator {
    // attribute long m_seed;
    // attribute boolean m_color;

    // float rand_01();
	// long get_array_index(long width, long row, long col);

    void noise_generator(long s, boolean color);
	void set_color(boolean color);
	
	void set_seed(long seed);

	float eval(float x, float y);
};

// implements noise_generator
interface lattice_noise {
    // attribute float[] m_noise_grid;
	// attribute long m_noise_grid_resolution;

    // void calculate_noise_grid();

    void lattice_noise(long noise_grid_resolution, long seed, float frequency, boolean color);

	void set_frequency(float frequency);

	void set_seed(long seed) ;
};
lattice_noise implements noise_generator;

// implements lattice_noise
interface perlin_noise {
    // attribute float m_frequency;
	// attribute vector2[] m_vector_grid;

	// float dotGridGradient(long ix, long iy, float x, float y);

    void perlin_noise(float frequency, long noise_grid_resolution, long seed, boolean color);
	void set_seed(long seed);
	float eval(float x, float y);
};
perlin_noise implements lattice_noise;

interface value_noise  // : public lattice_noise
{
	// attribute float m_frequency;
	// attribute long m_image_resolution;
	// attribute long m_noise_mask;

	void value_noise(float frequency, long noise_grid_resolution, long seed, boolean color);
	float eval(float x, float y);
};
value_noise implements lattice_noise;

interface white_noise //:	public lattice_noise
{
	float eval(float x, float y);
};
white_noise implements lattice_noise;

interface voronoi_noise // public noise_generator
{
	// attribute vector2[] m_cell_grid;
	// attribute long m_cell_amount;
	// attribute long m_image_resolution;

	// float distance(vector2 a, vector2 b);

    void voronoi_noise(long image_resolution, long cell_amount, long seed, boolean color);

	void set_cell_amount(long cell_amount);
	
	void set_seed(long seed) ;
	float eval(float x, float y);
};
voronoi_noise implements noise_generator;
